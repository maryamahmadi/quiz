{"ast":null,"code":"var _jsxFileName = \"/home/maryam/workspace/personal/gitfun/src/Question.js\";\nimport React from 'react';\nimport { Form, Radio } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport QuestionResult from './QuestionResult';\nimport andrew from './resources/andrew.png';\nimport maryam from './resources/maryam.png';\nimport matt from './resources/matt.png';\nimport steve from './resources/steve.png';\nimport shahram from './resources/shahram.png';\nimport rohit from './resources/rohit.png';\nconst images = {\n  andrew,\n  maryam,\n  steve,\n  rohit,\n  shahram,\n  matt\n};\n\nclass Question extends React.Component {\n  constructor() {\n    super();\n\n    this.pickThree = () => {\n      let three = [];\n      const max = this.props.members.length;\n      let i = 0; // generate three other random options for the multi-choice\n\n      while (i < 3) {\n        let index = Math.floor(Math.random() * max);\n\n        if (this.props.members[index] !== this.state.imageName && !three.includes(this.props.members[index])) {\n          i++;\n          three.push(this.props.members[index]);\n        }\n      }\n\n      return three;\n    };\n\n    this.shuffle = options => {\n      const numberOfChoices = 4;\n      let index = Math.floor(Math.random() * numberOfChoices);\n\n      if (index !== 0) {\n        const temp = options[0];\n        options[0] = options[index];\n        options[index] = temp;\n      }\n    };\n\n    this.constructChoices = () => {\n      console.log('in construct choices');\n      let options = [];\n      options.push(this.state.imageName);\n      console.log('construct choices one option is ', this.state.imageName);\n      const three = this.pickThree(this.state.imageName);\n      console.log('construct choices the other three choices are ', three);\n      three.forEach(option => options.push(option));\n      this.shuffle(options);\n      this.setState({\n        options,\n        value: undefined\n      });\n    };\n\n    this.renderChoices = () => {\n      console.log('renderChoices options is', this.state.options);\n      return /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, this.state.options.map(option => {\n        return /*#__PURE__*/React.createElement(Form.Field, {\n          key: option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(Radio, {\n          label: option,\n          name: \"radioGroup\",\n          value: option,\n          checked: this.state.value === option,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }));\n      }));\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => {\n      console.log('***props are', this.props);\n      this.setState({\n        value\n      });\n\n      if (value === this.state.imageName) {\n        this.setState({\n          correctAnswer: true\n        });\n        this.props.incrementCorrect();\n      } else {\n        this.setState({\n          correctAnswer: false\n        });\n      }\n    };\n\n    this.onNext = () => {\n      if (this.props.questionNumber < this.props.members.length) {\n        this.props.setQuestionNumber(this.props.questionNumber + 1);\n        this.setState({\n          correctAnswer: null,\n          value: null\n        });\n      } else {\n        this.props.setPage('results');\n      }\n    };\n\n    this.state = {\n      correctAnswer: null,\n      imageName: null,\n      options: [],\n      value: null\n    };\n  }\n\n  componentDidMount() {\n    const imageName = `${this.props.members[this.props.questionNumber - 1]}`;\n    this.setState({\n      imageName: imageName\n    }, this.constructChoices);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('Question didupdate', prevProps.questionNumber, this.props.questionNumber);\n\n    if (prevProps.questionNumber !== this.props.questionNumber) {\n      console.log('didupdate, prevquestion', prevProps.questionNumber);\n      console.log('didupdate, currentquestion', this.props.questionNumber);\n      const imageName = `${this.props.members[this.props.questionNumber - 1]}`;\n      this.setState({\n        imageName: imageName\n      }, this.constructChoices);\n      console.log('didupdate, currentimagename', imageName);\n    }\n  }\n\n  render() {\n    const label = this.props.questionNumber === this.props.members.length ? 'Results' : 'Next';\n    const imageName = `${this.props.members[this.props.questionNumber - 1]}`.toLowerCase();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '48px 0 48px 0',\n        fontSize: '20px',\n        fontWeight: '600'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, `${this.props.questionNumber}/${this.props.members.length}. Whose git history is this?`), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingBottom: '48px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: images[imageName],\n      alt: imageName,\n      width: \"900px\",\n      height: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingLeft: '24px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, this.renderChoices(imageName)), this.state.value && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '48px 0 0 100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(QuestionResult, {\n      correctAnswer: this.state.correctAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 79\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      onClick: () => this.onNext(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }\n    }, \" \", label, \" \")));\n  }\n\n}\n\nexport default Question; //clean render replace imagename with the one in state","map":{"version":3,"sources":["/home/maryam/workspace/personal/gitfun/src/Question.js"],"names":["React","Form","Radio","Button","QuestionResult","andrew","maryam","matt","steve","shahram","rohit","images","Question","Component","constructor","pickThree","three","max","props","members","length","i","index","Math","floor","random","state","imageName","includes","push","shuffle","options","numberOfChoices","temp","constructChoices","console","log","forEach","option","setState","value","undefined","renderChoices","map","handleChange","e","correctAnswer","incrementCorrect","onNext","questionNumber","setQuestionNumber","setPage","componentDidMount","componentDidUpdate","prevProps","render","label","toLowerCase","padding","fontSize","fontWeight","paddingBottom","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Radio } from 'semantic-ui-react'\nimport { Button } from 'semantic-ui-react'\nimport QuestionResult from './QuestionResult'\n\nimport andrew from './resources/andrew.png'\nimport maryam from './resources/maryam.png'\nimport matt from './resources/matt.png'\nimport steve from './resources/steve.png'\nimport shahram from './resources/shahram.png'\nimport rohit from './resources/rohit.png'\n\nconst images = {\n    andrew,\n    maryam,\n    steve,\n    rohit,\n    shahram,\n    matt\n}\nclass Question extends React.Component {\n    constructor () {\n        super()\n        this.state = {correctAnswer: null, imageName: null, options: [], value: null}\n    }\n\n    pickThree = () => {\n        let three = []\n        const max = this.props.members.length\n        let i = 0\n        // generate three other random options for the multi-choice\n        while (i < 3) {\n            let index = Math.floor(Math.random() * max)\n            if (this.props.members[index] !== this.state.imageName && !three.includes(this.props.members[index])) {\n                i++\n                three.push(this.props.members[index])\n            }\n        }\n        return three\n    }\n\n    shuffle = (options) => {\n        const numberOfChoices = 4\n        let index = Math.floor(Math.random() * numberOfChoices)\n        if (index !== 0) {\n            const temp = options[0]\n            options[0] = options[index]\n            options[index] = temp\n        }\n    }\n\n    componentDidMount () {\n        const imageName = `${this.props.members[this.props.questionNumber - 1]}`\n        this.setState({imageName: imageName}, this.constructChoices)\n    }\n\n    componentDidUpdate (prevProps) {\n        console.log('Question didupdate', prevProps.questionNumber, this.props.questionNumber)\n        if (prevProps.questionNumber !== this.props.questionNumber) {\n            console.log('didupdate, prevquestion', prevProps.questionNumber)\n            console.log('didupdate, currentquestion', this.props.questionNumber)\n            const imageName = `${this.props.members[this.props.questionNumber - 1]}`\n            this.setState({imageName: imageName}, this.constructChoices)\n            console.log('didupdate, currentimagename', imageName)\n        }\n\n    }\n\n    constructChoices = () => {\n        console.log('in construct choices')\n        let options = []\n        options.push(this.state.imageName)\n        console.log('construct choices one option is ', this.state.imageName)\n        const three = this.pickThree(this.state.imageName)\n        console.log('construct choices the other three choices are ', three)\n\n        three.forEach(option => options.push(option))\n        this.shuffle(options)\n        this.setState({options, value: undefined})\n    }\n\n    renderChoices = () => {\n        console.log('renderChoices options is', this.state.options)\n        return (\n            <Form>\n            {this.state.options.map(option => {\n                return <Form.Field key={option}>\n                <Radio\n                  label={option}\n                  name='radioGroup'\n                  value={option}\n                  checked={this.state.value === option}\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            })}\n          </Form>\n        )\n    }\n    handleChange = (e, { value }) => {\n        console.log('***props are', this.props)\n        this.setState({ value })\n        if (value === this.state.imageName) {\n            this.setState({correctAnswer: true})\n            this.props.incrementCorrect()\n        } else {\n            this.setState({correctAnswer: false})\n\n        }\n\n    }\n\n    onNext = () => {\n        if (this.props.questionNumber < this.props.members.length){\n            this.props.setQuestionNumber(this.props.questionNumber + 1)\n            this.setState({correctAnswer: null, value: null})\n        } else {\n            this.props.setPage('results')\n        }\n    }\n\n    render () {\n        const label = this.props.questionNumber === this.props.members.length ? 'Results' : 'Next'\n        const imageName = `${this.props.members[this.props.questionNumber - 1]}`.toLowerCase()\n        return (\n            <div>\n                <div style={{padding: '48px 0 48px 0', fontSize: '20px', fontWeight: '600'}}>{`${this.props.questionNumber}/${this.props.members.length}. Whose git history is this?`}</div>\n                <div style={{paddingBottom: '48px'}}> <img src={images[imageName]} alt={imageName} width='900px' height='200px' /></div>\n                <div style={{paddingLeft: '24px'}}>{this.renderChoices(imageName)}</div>\n                {this.state.value && <div style={{padding: '48px 0 0 100px'}}><QuestionResult correctAnswer={this.state.correctAnswer}/></div>}\n                <div><Button primary onClick={() => this.onNext()}> {label} </Button></div>\n            </div>\n        )\n\n    } \n\n}\n\nexport default Question\n//clean render replace imagename with the one in state"]},"metadata":{},"sourceType":"module"}